# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: skillsunionsaravanan
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: sls-sara-2
# "service" is the name of this project. This will also be added to your AWS resource names.
service: sls-2

provider:
  name: aws # Cloud provider you're using, here AWS
  region: ap-southeast-1 
  runtime: nodejs20.x # Runtime environment for the function, here Node.js v20.x

functions:
  hello: # This is the name of the function within your service. The function name (hello) can be anything you choose and will be referenced in deployment and logs.
    handler: handler.hello # Path to the function code (handler file and function name)
    events:
      - httpApi:
          path: / # HTTP path for triggering the function This defines the URL path for the API endpoint that will trigger the function. The / path means that the function will be invoked when someone accesses the root URL (e.g., https://your-api-url.com/).
          method: get # HTTP method (GET, POST, etc.) In this case, the function will be invoked when a GET request is made to the / path.
      - sqs: # This defines an SQS event that will trigger the function when a message is placed into an Amazon Simple Queue Service (SQS) queue. The SQS event allows the function to consume messages from the queue.
          arn: arn:aws:sqs:ap-southeast-1:255945442255:sara # arn: specifies the Amazon Resource Name (ARN) of the SQS queue. The ARN uniquely identifies the queue (sara) located in the AWS region ap-southeast-1 with the account ID 255945442255.
          batchSize: 10 # This defines the number of messages that AWS Lambda will pull from the SQS queue in one batch. In this case, it will retrieve up to 10 messages at a time to process in a single function invocation. This helps optimize performance by processing multiple messages in a batch.
          maximumBatchingWindow: 60 # This defines the maximum amount of time (in seconds) Lambda will wait before invoking the function with a batch of messages. If fewer than 10 messages are available in the queue, Lambda will wait for up to 60 seconds before triggering the function. This allows batching when messages arrive slowly.
          functionResponseType: ReportBatchItemFailures # This specifies how the function should handle message processing failures. When set to ReportBatchItemFailures, the function will report which messages failed to be processed in the batch, and SQS will only retry those failed messages, rather than the entire batch. This helps improve efficiency when handling large message queues.

plugins: # it's used to specify any additional plugins you want to use in your Serverless project.
   - serverless-offline # is a popular plugin that allows you to run and test your Serverless functions locally.